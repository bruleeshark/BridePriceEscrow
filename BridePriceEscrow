<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>Bare Bones HTML Interface for Escrow Contract</title>
    <script src="https://cdn.jsdelivr.net/npm/web3@1.5.2/dist/web3.min.js"></script>
    <script src="https://cdn.ethers.io/lib/ethers-5.4.umd.min.js"></script>
    <script>
      window.addEventListener('load', async () => {
        if (window.ethereum) {
          window.web3 = new Web3(window.ethereum);
          try {
            await window.ethereum.enable();
          } catch (error) {
            console.error("User denied account access")
          }
        }
        else if (window.web3) {
          window.web3 = new Web3(window.web3.currentProvider);
        }
        else {
          console.error("No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.")
        }
      });
    </script>
 
</head>
<body>
	<h1>Escrow Contract</h1>
	<p>Amount in escrow: <span id="amount"></span> ETH</p>
	<p>Current account: <span id="account"></span></p>
	<p><button id="depositButton" onclick="deposit()">Deposit</button></p>
	<p><button id="withdrawButton" onclick="withdraw()">Withdraw</button></p>

	<script>
		let contractAddress = "YOUR_CONTRACT_ADDRESS";
		let contractABI = [
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "bride",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "thirdParty",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "description",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		];
		let provider = new ethers.providers.Web3Provider(web3.currentProvider);
		let signer = provider.getSigner();
		let contract = new ethers.Contract(contractAddress, contractABI, signer);

		async function updateAmount() {
			let amount = await contract.getAmount();
			document.getElementById("amount").textContent = ethers.utils.formatEther(amount);
		}

		async function updateAccount() {
			let accounts = await signer.getAddress();
			document.getElementById("account").textContent = accounts;
		}

		async function deposit() {
			let value = ethers.utils.parseEther(prompt("Enter the amount of ETH to deposit:"));
			await contract.deposit({value: value});
			await updateAmount();
		}

		async function withdraw() {
			await contract.withdraw();
			await updateAmount();
		}

		updateAmount();
		updateAccount();
	</script>
</body>
</html>
